#!/bin/bash
script_dir="$(dirname -- "$(readlink -f -- "$0")")"

# Make files and directories used but not "owned" by dotfiles
touch "$HOME"/.zshenv

mkdir -p "$HOME/src"
mkdir -p "$HOME/.ssh/config.d" # ssh profiles that I don't want tracked in git go here
mkdir -p "$HOME/dev/local"
mkdir -p "$HOME/.local/bin"
mkdir -p "$HOME/.config"

# Prevent stow from adopting certain folders, and instead only link the files
touch "$HOME/.ssh/.stowkeep"
touch "$HOME/.local/.stowkeep"
touch "$HOME/.local/bin/.stowkeep"
touch "$HOME/.local/dev/.stowkeep"
touch "$HOME/.config/.stowkeep"

command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# ensure git is installed
if ! command_exists git; then
  echo "git not found, install git before continuing..."
  echo "how did you even git this onto your machine?"
  echo "haha... see what I did there..."
  exit 1
fi

# install brew
case "$(uname)" in
  Darwin)
    if ! command_exists brew; then
      echo "brew not found, installing it for you..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi

    # shell essentials
    brew install bash
    # core tools
    brew install coreutils moreutils
    # net tools
    brew install openssl wget
    # dev tools
    brew install tmux neovim ripgrep fzf fd git-delta bat stow
    # programming languages
    brew install uv python cmake golang rust dotnet-sdk
    # extra tools
    brew install gh jq yazi

    $script_dir/configure-macos
    ;;
  Linux)
    # TODO install nuget
    if command_exists dnf; then
      echo "dnf package manager found, installing packages for dnf"
      # shell essentials
      sudo dnf install -y bash zsh man git sudo passwd procps
      # core tools
      sudo dnf install -y coreutils moreutils clang parallel
      # net tools
      sudo dnf install -y openssl curl wget iproute traceroute hostname
      # dev tools
      sudo dnf install -y tmux neovim ripgrep fd git-delta bat stow
      # programming languages
      sudo dnf install -y python3 cmake golang rust dotnet-sdk-8.0
      # extra tools
      sudo dnf install -y gh jq clang-tools-extra inotify-tools
    elif command_exists apt-get; then
      # shell essentials
      sudo apt-get install -y bash zsh man git sudo passwd procps
      # core tools
      sudo apt-get install -y coreutils moreutils clang parallel
      # net tools
      sudo apt-get install -y openssl curl wget traceroute hostname
      # dev tools
      sudo apt-get install -y tmux neovim ripgrep fd-find bat stow
      # programming languages
      # TODO: add dotnet
      sudo apt-get install -y python3 cmake
      # extra tools
      sudo apt-get install -y gh jq clang-format inotify-tools
      # because packages for go in ubuntu are no longer supported in 22.04
      wget https://go.dev/dl/go1.22.5.linux-amd64.tar.gz -O /tmp/go1.22.5.linux-amd64.tar.gz
      sudo tar -xvf /tmp/go1.22.5.linux-amd64.tar.gz -C /usr/local
      sudo ln -s /usr/local/go/bin/go /usr/bin/go
    else
      echo "package manager not configured, configure and try again"
      exit 0
    fi

    # Some Linux packages are not
    # - Up to date and missing features
    # - Available in certain package managers
    # Thus installing these few through other means
    if ! command_exists uv; then
      curl -fsSL https://astral.sh/uv/install.sh | sh
    fi

    if ! command_exists fzf; then
      go install github.com/junegunn/fzf@latest
    fi

    if ! command_exists delta; then
      curl -fsSL https://github.com/dandavison/delta/releases/download/0.17.0/git-delta_0.17.0_amd64.deb -o /tmp/git-delta_0.17.0_amd64.deb
      sudo dpkg -i /tmp/git-delta_0.17.0_amd64.deb
    fi

    # End of linux block
    ;;
esac

# install spaceship
git clone --depth=1 https://github.com/spaceship-prompt/spaceship-prompt.git "$HOME/.config/spaceship-prompt"

# sync dotfiles
$script_dir/sync || exit $?

# Install flutter
export FLUTTER_ROOT="$HOME/.local/dev/flutter"
git clone https://github.com/flutter/flutter.git "$FLUTTER_ROOT"
"$HOME"/.local/dev/flutter/bin/flutter --disable-analytics
"$HOME"/.local/dev/flutter/bin/flutter channel stable

# Install nvm
git clone https://github.com/nvm-sh/nvm.git "$HOME/.local/dev/nvm"
"$HOME"/.local/dev/nvm install node

# install lazygit from source
if ! command_exists lazygit && command_exists go; then
  go install github.com/jesseduffield/lazygit@latest
fi

# install yazi from source
if ! command_exists yazi && command_exists cargo; then
  cargo install --locked yazi-fm yazi-cli
fi

# gh dash
if command_exists gh; then
  gh extension install dlvhdr/gh-dash
fi

# csharp-ls
if command_exists dotnet; then
  dotnet tool install --global csharp-ls
fi

# sync nvim
nvim --headless "+Lazy! sync" +qa

# Do a healthcheck to ensure that everything I want is installed
"$script_dir"/check-env
