%hidden is_macos="[[ $(uname) == 'Darwin' ]]"
%hidden is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
%hidden is_vim_or_aerc="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf|aerc)(diff)?$'"

# environment
set -g default-shell $SHELL
if "$is_macos" {
  setenv -g PATH "/opt/homebrew/bin:/bin:/usr/bin"
} {
  setenv -g PATH "/bin:/usr/bin"
}
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.config/tmux/plugins/"

# reload configuration key bind
unbind r
bind -r r source "$HOME/.config/tmux/tmux.conf"

# use C-space as the prefix
set-option -g prefix C-space
bind C-space send-prefix

# general settings
set -g mouse on 
set -g history-limit 25000
set -g status-position top

# from tmux-sensible
set -g focus-events on
setw -g aggressive-resize on
bind C-p previous-window
bind C-n next-window

# nvim qol
set -sg escape-time 0
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"
set -g detach-on-destroy off

# count the panes from 1
set -g base-index 1
set -g renumber-windows on
setw -g pane-base-index 1

# vi mode
setw -g mode-keys vi

# neovim splits navigation (vim-tmux-navigator)
bind -n 'C-h' if-shell "$is_vim_or_aerc" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim_or_aerc" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim_or_aerc" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim_or_aerc" 'send-keys C-l'  'select-pane -R'

bind 'C-h' select-pane -L
bind 'C-j' select-pane -D
bind 'C-k' select-pane -U
bind 'C-l' select-pane -R

# vi-like copy-mode
bind v copy-mode
bind -T copy-mode-vi Escape copy-mode -q

# visual mode in vi copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

# yank / paste in vi mode
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection
bind p paste-buffer

# session new windows / splits
bind C neww
bind c 'neww -c "#{pane_current_path}"'
bind | 'splitw -h -c "#{pane_current_path}"'
bind - 'splitw -v -c "#{pane_current_path}"'

# session management
bind a popup -E "source ~/.config/tmux/scripts/session.sh && fzf_session" # fzf add session
bind s run -C 'choose-tree -s -O time; send j' # open choose-tree sorted by recency, with previous pane selected
# https://unix.stackexchange.com/questions/759401/is-there-a-way-to-customize-the-keys-in-tmuxs-choose-mode
# a to add new session
bind -T root a if-shell -F '#{==:#{pane_mode},tree-mode}' { 
  popup -E 'source ~/.config/tmux/scripts/session.sh && fzf_session'
} {
  send a
}
# s to fzf new session
bind -T root s if-shell -F '#{==:#{pane_mode},tree-mode}' "popup -E 'source ~/.config/tmux/scripts/session.sh && ssh_session'" 'send s'
# d to delete session
bind -T root d if-shell -F '#{==:#{pane_mode},tree-mode}' 'send x' 'send d'


# plugins
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'mkdir -p ~/.config/tmux/plugins && git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'tmux-plugins/tpm'

# tmux-suspend
set -g @plugin 'xavierchanth/tmux-suspend'
set -g @suspend_key 'M-z'
set -g @suspend_on_suspend_command "tmux rename-session '#S ðŸ”’'"
set -g @suspend_on_resume_command "tmux rename-session \"$(tmux display-message -p '#S' | sed 's/ ðŸ”’$//')\" "

# tmux-resurrect
set -g @plugin 'xavierchanth/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'

# tmux themes
set -g @plugin 'xavierchanth/catppuccin-tmux'
if "true" {
  set -g @catppuccin_window_left_separator "â–ˆ"
  set -g @catppuccin_window_right_separator "â–ˆ"
  set -g @catppuccin_window_middle_separator " â–ˆ"

  set -g @catppuccin_status_left_separator  "â–ˆ"
  set -g @catppuccin_status_right_separator "â–ˆ"
} {
  set -g @catppuccin_window_left_separator "î‚¶"
  set -g @catppuccin_window_right_separator "î‚´Â "
  set -g @catppuccin_window_middle_separator " â–ˆ"

  set -g @catppuccin_status_left_separator  " î‚¶"
  set -g @catppuccin_status_right_separator "î‚´"
}

set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "user host session"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"

%hidden last_color='$(cat "$HOME/.local/share/nvim/last-color")'
if "echo $last_color | grep -qE '.'" {
  set -g @catppuccin_flavour ""
  if "[ $last_color = 'catppuccin-mocha' ]" 'set -g @catppuccin_flavour "catppuccin_mocha"'
  if "[ $last_color = 'catppuccin-frappe' ]" 'set -g @catppuccin_flavour "catppuccin_frappe"'
  if "[ $last_color = 'catppuccin-macchiato' ]" 'set -g @catppuccin_flavour "catppuccin_macchiato"'
  if "[ $last_color = 'catppuccin-latte' ]" 'set -g @catppuccin_flavour "catppuccin_latte"'
  if "[ $last_color = 'tokyonight-night' ]" 'set -g @catppuccin_flavour "tokyonight_night"'
  if "[ $last_color = 'tokyonight-day' ]" 'set -g @catppuccin_flavour "tokyonight_day"'
  if "[ $last_color = 'tokyonight-storm' ]" 'set -g @catppuccin_flavour "tokyonight_storm"'
  if "[ $last_color = 'tokyonight-moon' ]" 'set -g @catppuccin_flavour "tokyonight_moon"'
}

# ssh splits
set -g @plugin 'pschmitt/tmux-ssh-split'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$HOME/.config/tmux/plugins/tpm/tpm"
