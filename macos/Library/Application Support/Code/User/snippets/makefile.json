{
	// Place your snippets for makefile here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Make Boilerplate": {
		"prefix": "make",
		"body":[
"# Lets specify compiler",
"CC = g++",
"CFLAGS = -c",
"",
"# Source files.  We keep header files separate from the cpp files.",
"# Recall that we will compile cpp files, but we do not compile",
"# the header files.",
"HEADER = $1",
"CPP = main.cpp $2",
"LIB = $3",
"",
"# Program name",
"PROGNAME = $0",
"",
"# Object files",
"OBJ = $(CPP:.cpp=.o)",
"",
"all: $(PROGNAME)",
"",
"$(PROGNAME): $(OBJ) $(LIB)",
"$(C\tC) -o $@ $(OBJ)",
"",
"%.o: %.cpp $(HEADER)",
"\t$(CC) $(CFLAGS) -o $@ $<",
"",
"run: $(PROGNAME)",
"\t./$(PROGNAME)",
"",
"# Target clean is phony, since it doesn't",
"# create a file called clean.  Notice that other",
"# targets --- all and message --- create file",
"# message.",
".PHONY: clean",
"",
"# We will use target clean to delete both the object files",
"# and the program.",
"clean:",
"\trm -rf $(PROGNAME) $(OBJ)",
		],
		"description": "From CSCI1061U @ UOIT."
	}
}